// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// ip_to_df
DataFrame ip_to_df(std::list < std::vector < std::string > > x);
RcppExport SEXP _rgeolocate_ip_to_df(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::list < std::vector < std::string > > >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(ip_to_df(x));
    return rcpp_result_gen;
END_RCPP
}
// freegeoip_to_df
DataFrame freegeoip_to_df(std::list < std::vector < std::string > > x);
RcppExport SEXP _rgeolocate_freegeoip_to_df(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::list < std::vector < std::string > > >::type x(xSEXP);
    rcpp_result_gen = Rcpp::wrap(freegeoip_to_df(x));
    return rcpp_result_gen;
END_RCPP
}
// maxmind_
DataFrame maxmind_(std::vector < std::string > ips, const char* file);
RcppExport SEXP _rgeolocate_maxmind_(SEXP ipsSEXP, SEXP fileSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< std::vector < std::string > >::type ips(ipsSEXP);
    Rcpp::traits::input_parameter< const char* >::type file(fileSEXP);
    rcpp_result_gen = Rcpp::wrap(maxmind_(ips, file));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_rgeolocate_ip_to_df", (DL_FUNC) &_rgeolocate_ip_to_df, 1},
    {"_rgeolocate_freegeoip_to_df", (DL_FUNC) &_rgeolocate_freegeoip_to_df, 1},
    {"_rgeolocate_maxmind_", (DL_FUNC) &_rgeolocate_maxmind_, 2},
    {NULL, NULL, 0}
};

RcppExport void R_init_rgeolocate(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
